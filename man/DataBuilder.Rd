% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CorpusBuilder.R, R/DataBuilder.R
\docType{class}
\name{DataBuilder}
\alias{DataBuilder}
\alias{DataBuilder}
\title{DataBuilder}
\format{An object of class \code{R6ClassGenerator} of length 24.}
\usage{
DataBuilder

DataBuilder
}
\arguments{
\item{name}{Character string indicating the name of the Data object}

\item{desc}{Character string containing the description of the Data}

\item{url}{Character string containing the URL from which the raw corpus data will be obtained.}

\item{train}{Numeric indicating the proportion of the data to retain for training}

\item{val}{Numeric indicating the proportion of the data to retain for validation}

\item{test}{Numeric indicating the proportion of the data to retain for testing}

\item{k}{Numeric indicating the number of folds to use in k-fold cross validation.}

\item{...}{Parameters passed to the parsing method.}

\item{norms}{Data set containing key/value pairs of patterns and their replacements}

\item{stopWords}{Data set with a single column containing words to be removed or replaced in the corpus.}

\item{tag}{Character string containing the string with which to replace the stop words.}

\item{name}{Character string indicating the name of the Data object}

\item{desc}{Character string containing the description of the Data}

\item{url}{Character string containing the URL from which the raw corpus data will be obtained.}

\item{train}{Numeric indicating the proportion of the data to retain for training}

\item{val}{Numeric indicating the proportion of the data to retain for validation}

\item{test}{Numeric indicating the proportion of the data to retain for testing}

\item{k}{Numeric indicating the number of folds to use in k-fold cross validation.}

\item{...}{Parameters passed to the parsing method.}

\item{norms}{Data set containing key/value pairs of patterns and their replacements}

\item{stopWords}{Data set with a single column containing words to be removed or replaced in the corpus.}

\item{tag}{Character string containing the string with which to replace the stop words.}
}
\description{
\code{DataBuilder} Concrete DataBuilder class

\code{DataBuilder} Concrete DataBuilder class
}
\details{
Class containing the methods for building the corpora, from sourcing, through
cross-validation splitting and preprocessing.

The Data Builder family of classes is an implementation of the builder and
command patterns documented in the book "Design Patterns: Elements of Reusable
Object-Oriented Software" by Erich Gamma, Richard Helm, Ralph Johnson
and John Vlissides (hence Gang of Four). This pattern allows the
construction process to be defined at runtime.

Class containing the methods for building the corpora, from sourcing, through
cross-validation splitting and preprocessing.

The Data Builder family of classes is an implementation of the builder and
command patterns documented in the book "Design Patterns: Elements of Reusable
Object-Oriented Software" by Erich Gamma, Richard Helm, Ralph Johnson
and John Vlissides (hence Gang of Four). This pattern allows the
construction process to be defined at runtime.
}
\section{Data Builder Participants}{

 \describe{
  \item{DataBuilder0}{This abstract builder interface. Defines the methods for building the corpora. }
  \item{DataBuilder}{This concrete builder sub-class that produces the corpora. }
  \item{DataDirector}{Class that builds the corpora through the concrete builder classes.}
  \item{Data}{The data product, comprised of raw, refined, cross validation, and preprocessed corpora.}
  }


 \describe{
  \item{DataBuilder0}{This abstract builder interface. Defines the methods for building the corpora. }
  \item{DataBuilder}{This concrete builder sub-class that produces the corpora. }
  \item{DataDirector}{Class that builds the corpora through the concrete builder classes.}
  \item{Data}{The data product, comprised of raw, refined, cross validation, and preprocessed corpora.}
  }
}

\section{Data DataBuilder Methods}{

 \describe{
  \item{\code{new()}}{Instantiates the builder object}
  \item{\code{sourceData(url)}}{Sources corpus data from the web.}
  \item{\code{refine()}}{Corrects encoding errors}
  \item{\code{buildCV(train, val, test)}}{Splits data according to the parameters.}
  \item{\code{buildCVKFold(k)}}{Builds the K-Fold data sets for each register in the corpus.}
  \item{\code{parse(...)}}{Parses the data according to the parameter set.}
  \item{\code{normalize(norms)}}{Normalizes data according to the key/value data frame parameter.}
  \item{\code{filterWord(stopWords)}}{Removes the stopWords from the corpus}
  \item{\code{filterSent(stopWords)}}{Removes the sentences containing the stopWords from the corpus.}
  \item{\code{filterTag(stopWords, Tag)}}{Replaces stopwords with the tag parameter. }
  \item{\code{commit()}}{Commit preprocessing changes.}
 }


 \describe{
  \item{\code{new()}}{Instantiates the builder object}
  \item{\code{sourceData(url)}}{Sources corpus data from the web.}
  \item{\code{refine()}}{Corrects encoding errors}
  \item{\code{buildCV(train, val, test)}}{Splits data according to the parameters.}
  \item{\code{buildCVKFold(k)}}{Builds the K-Fold data sets for each register in the corpus.}
  \item{\code{parse(...)}}{Parses the data according to the parameter set.}
  \item{\code{normalize(norms)}}{Normalizes data according to the key/value data frame parameter.}
  \item{\code{filterWord(stopWords)}}{Removes the stopWords from the corpus}
  \item{\code{filterSent(stopWords)}}{Removes the sentences containing the stopWords from the corpus.}
  \item{\code{filterTag(stopWords, Tag)}}{Replaces stopwords with the tag parameter. }
  \item{\code{commit()}}{Commit preprocessing changes.}
 }
}

\seealso{
Other Data builder classes: \code{\link{CorpusBuilder0}},
  \code{\link{Data}}

Other Data builder classes: \code{\link{CorpusBuilder0}},
  \code{\link{Data}}
}
\author{
John James, \email{jjames@datasciencesalon.org}

John James, \email{jjames@datasciencesalon.org}
}
\keyword{datasets}
