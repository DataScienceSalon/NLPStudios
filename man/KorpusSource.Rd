% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/KorpusSource.R
\docType{class}
\name{KorpusSource}
\alias{KorpusSource}
\title{KorpusSource}
\format{An object of class \code{R6ClassGenerator} of length 24.}
\usage{
KorpusSource
}
\description{
\code{KorpusSource} Class for creating & downloading a corpus from the internet
}
\details{
This leaf class is part of the Document composition class. This class
includes the data and methods required to download and store corpora from
internet sources.
}
\section{Methods}{

\describe{
 \item{\code{initialize(url, fileName, destFile)}}{Creates a source instance}
 \item{\code{getDownloader()}}{Gets the current download method}
 \item{\code{setDownloader()}}{Sets the current download method}
 \item{\code{download()}}{Executes the download using the current downloader}
 \item{\code{unzip()}}{Executes the download using the current downloader}
}
}

\section{Core Methods}{

The core methods are shared by both primative and composite objects and are
as follows:
\describe{
 \item{getDocument}{Base method for retrieving the document meta data. Specific behaviors implemented in the Register and Korpus subclasses }
 \item{printDocument}{Base method for printing the document meta data to the console. Specific behaviors implemented in the Register and Korpus subclasses}
 \item{readDocument}{Base method for reading documents. Specific behaviors implemented in the Register and Korpus subclasses}
 \item{writeDocument}{Base method for writing documents. Specific behaviors implemented in the Register and Korpus subclasses}
 \item{archiveDocument}{Base method for archiving documents. Specific behaviors implemented in the Register and Korpus subclasses}
}
}

\section{Composite Methods}{

The composite methods are used to manage the collection of documents within the composite objects or corpora within
other corpora. For instance,the training corpus may be a collection of corpora of varying sizes. These methods include:
\describe{
 \item{addDocument}{Base method for adding registers to a corpus. Valid only for Korpus class objects.  Specific behaviors implemented in the Korpus subclass}
 \item{removeDocument}{Base method for removing registers from a corpus. Valid only for Korpus class objects.  Specific behaviors implemented in the Korpus subclass}
 \item{listDocuments}{Base method for getting a list of registers in a corpus. Valid only for Korpus class objects.  Specific behaviors implemented in the Korpus subclass}
}
}

\section{Behavior Methods}{

These methods enable clients to define behaviors for Register and Korpus class object at runtime. These methods are:
\describe{
 \item{getReader}{Base method for returning the current Reader subclass for the object.}
 \item{setReader}{Base method for setting the current Reader subclass for the object.}
 \item{getWriter}{Base method for returning the current Writer subclass for the object.}
 \item{setWriter}{Base method for setting the current Writer subclass for the object.}
}
}

\author{
John James, \email{j2sdatalab@gmail.com}
}
\keyword{datasets}
